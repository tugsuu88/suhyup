<%/******************************************************************************Title			: commodity_write.jsp*@author		: K.B.S*@date			: 2014-11*@Description	: DB 등록 처리*@Copyright		: *******************************************************************************수정일		*수정자		*수정사유******************************************************************************/%><%@ page import="java.util.*, java.text.*, java.io.*, util.*" contentType="text/html;charset=euc-kr" %><%@ page import="board.commodity.DataFileInfo" %><%@ page import="com.oreilly.servlet.*" %><%@ page import="com.oreilly.servlet.multipart.*" %><jsp:useBean id="FrontBoard" scope="request" class="Bean.Front.Common.FrontBoradType1"/><jsp:useBean id="Board" scope="request" class="Bean.admin.BoardType1"/><%@ include file="../inc/requestSecurity.jsp" %><!--  <jsp:useBean id="DataMgr" scope="request" class="board.commodity.DataMgr"/>--><%@ include file="commodity_comm.jsp" %><%	boolean bSuccess = false;	//DB작업 성공 여부	//lib 폴더 밑에 cos.jar 파일이 필요함 	//String savePath = "C:/Tomcat5/webapps/ROOT/child/manager/noti/file/"; 	//저장할 디렉토리 (절대경로)	//String savePath = "/data2/newroot/child/manager/noti/file/";			//UNIX 저장할 디렉토리 (절대경로)	String savePath = application.getRealPath("/upload/board3"); //폴더 얻기	//out.println("savePath : " + savePath + "<br><br>"); 	//int sizeLimit = 5 * 1024 * 1024 ; // 5메가까지 제한 넘어서면 예외발생 	int sizeLimit = 500 * 1024 * 1024 ; // 20메가까지 제한 넘어서면 예외발생 	Vector filenames = new Vector(); 	try {	 	MultipartRequest multi = new MultipartRequest(request, savePath, sizeLimit, "euc-kr", new DefaultFileRenamePolicy()); 	 		 	String file_no1 = "";		String file_no2 = "";		String file_no3 = "";		String file_no4 = "";		String file_no5 = "";		file_no1 = multi.getParameter("file_no1");		file_no2 = multi.getParameter("file_no2");		file_no3 = multi.getParameter("file_no3");		file_no4 = multi.getParameter("file_no4");		file_no5 = multi.getParameter("file_no5");// 		out.println("file_no1 : " + file_no1 + "<br>");// 		out.println("file_no2 : " + file_no2 + "<br>");		// 		out.println("file_no3 : " + file_no2 + "<br>");		// 		out.println("file_no4 : " + file_no2 + "<br>");		// 		out.println("file_no5 : " + file_no2 + "<br>");			 	String file1 = multi.getFilesystemName("file1");	 	  		String ofile1 = multi.getOriginalFileName("file1");   		String file2 = multi.getFilesystemName("file2");  		String ofile2 = multi.getOriginalFileName("file2");  		  		String file3 = multi.getFilesystemName("file3");  		String ofile3 = multi.getOriginalFileName("file3");  		  		String file4 = multi.getFilesystemName("file4");  		String ofile4 = multi.getOriginalFileName("file4");  		  		String file5 = multi.getFilesystemName("file5");  		String ofile5 = multi.getOriginalFileName("file5");  		 		/////////////////////////////////////////////////// 		//2007-12-24 추가		String[] no_ext = { "asp", "php", "cgi", "sh", "php3", "php4", "html", "htm", "inc", "jsp", "exe", "com", "bat", "htc", "hta" }; 			 		if(file1 != null && !file1.equals("")){	 		String ext_1 = file1.substring(file1.lastIndexOf('.') + 1);	 		ext_1 = ext_1.toLowerCase();	 		for(int i=0; i<no_ext.length; i++){	 			if( ext_1.equals(no_ext[i]) ){	 				out.println("<script language='javascript'>");					out.print("alert('업로드 금지 파일입니다.\\n\\n확인 후 다시 작업하시기 바랍니다.');");					out.println("history.go(-1);");					out.println("</script>");					if ( true ) return;		 			}	 		} 		} 		 		if(file2 != null && !file2.equals("")){	 		String ext_2 = file2.substring(file2.lastIndexOf('.') + 1);	 		ext_2 = ext_2.toLowerCase();	 		for(int i=0; i<no_ext.length; i++){	 			if( ext_2.equals(no_ext[i]) ){	 				out.println("<script language='javascript'>");					out.print("alert('업로드 금지 파일입니다.\\n\\n확인 후 다시 작업하시기 바랍니다.');");					out.println("history.go(-1);");					out.println("</script>");					if ( true ) return;		 			}	 		} 		} 		 		if(file3 != null && !file3.equals("")){	 		String ext_3 = file3.substring(file3.lastIndexOf('.') + 1);	 		ext_3 = ext_3.toLowerCase();	 		for(int i=0; i<no_ext.length; i++){	 			if( ext_3.equals(no_ext[i]) ){	 				out.println("<script language='javascript'>");					out.print("alert('업로드 금지 파일입니다.\\n\\n확인 후 다시 작업하시기 바랍니다.');");					out.println("history.go(-1);");					out.println("</script>");					if ( true ) return;		 			}	 		} 		} 		 		if(file4 != null && !file4.equals("")){	 		String ext_4 = file4.substring(file4.lastIndexOf('.') + 1);	 		ext_4 = ext_4.toLowerCase();	 		for(int i=0; i<no_ext.length; i++){	 			if( ext_4.equals(no_ext[i]) ){	 				out.println("<script language='javascript'>");					out.print("alert('업로드 금지 파일입니다.\\n\\n확인 후 다시 작업하시기 바랍니다.');");					out.println("history.go(-1);");					out.println("</script>");					if ( true ) return;		 			}	 		} 		} 		 		if(file5 != null && !file5.equals("")){	 		String ext_5 = file5.substring(file5.lastIndexOf('.') + 1);	 		ext_5 = ext_5.toLowerCase();	 		for(int i=0; i<no_ext.length; i++){	 			if( ext_5.equals(no_ext[i]) ){	 				out.println("<script language='javascript'>");					out.print("alert('업로드 금지 파일입니다.\\n\\n확인 후 다시 작업하시기 바랍니다.');");					out.println("history.go(-1);");					out.println("</script>");					if ( true ) return;		 			}	 		} 		}  		///////////////////////////////////////////////////  				  			 	for (Enumeration  e = multi.getFileNames(); e.hasMoreElements() ;) {			String strName = (String) e.nextElement();	        String fileName = multi.getFilesystemName(strName);					//파일명	        int size = (int)(new File(savePath + "/" + fileName).length());		//파일 사이즈// 	        out.println("<br>savePath : " + savePath +  "</br>");// 	        out.println("<br>fileName : " + fileName +  "</br>");// 	        out.println("<br>savePath : " + savePath + "/" + fileName  + "</br>");			//out.println("strName : " + strName + "<br>");			//out.println("fileName : " + fileName + "<br>");			//out.println("size : " + size + "<br><br>");						DataFileInfo  fileBoard = new DataFileInfo();// 			out.println("**********file1" + strName.equals("file1") + "</br>");			if(strName.equals("file1")){				fileBoard.setFile_no(file_no1);	//파일 번호1			}			if(strName.equals("file2")){				fileBoard.setFile_no(file_no2);	//파일 번호2			}			if(strName.equals("file3")){				fileBoard.setFile_no(file_no3);	//파일 번호3			}			if(strName.equals("file4")){				fileBoard.setFile_no(file_no4);	//파일 번호4			}			if(strName.equals("file5")){				fileBoard.setFile_no(file_no5);	//파일 번호5			}				        fileBoard.setFile_name(fileName);	//파일명	        fileBoard.setFile_size(Integer.toString(size));		//파일 사이즈	        if(fileName != null) {  				filenames.add(fileBoard);	        }		}				//    	// Object define : request.getParameter    	//    	    	String mode = multi.getParameter("mode");//     	out.println("mode : " + mode + "<br>");    	    	String PAGE = multi.getParameter("PAGE");		if(PAGE == null || PAGE.equals("")) {			PAGE = "1";		}		String KEY = multi.getParameter("KEY");	//검색어    	if(KEY != null && !KEY.equals("")) {    		KEY = StringReplace.sqlFilter(KEY);		//금지어 필터링    	}    	//out.println("KEY : " + KEY + "<br>");    	String FIELD = multi.getParameter("FIELD");	//검색구분    	    	String sh_seq_no = multi.getParameter("sh_seq_no");// 		out.println("sh_seq_no : " + sh_seq_no + "<br>");		String sh_title = multi.getParameter("sh_title");// 		out.println("sh_title : " + sh_title + "<br>");		String sh_content = multi.getParameter("sh_content");		sh_content = StringReplace.clearXSS(sh_content, "p,br");	//XSS 필터링// 		out.println("sh_content : " + sh_content + "<br>");      	String sh_reg_writer = multi.getParameter("sh_reg_writer");		      	String sh_hit_cnt = "0";      	String file_no = multi.getParameter("file_no");		String sh_reg_dt = multi.getParameter("sh_reg_dt");		///////////////////////////////////////////////////      					//		// not null check		//		if (sh_seq_no == null) sh_seq_no = "";		if (sh_title == null) sh_title = "";		if (sh_content == null) sh_content = "";		if (sh_reg_writer == null) sh_reg_writer = "";		if (sh_hit_cnt == null) sh_hit_cnt = "";		if (file_no == null) file_no = "";		if (sh_reg_dt == null) sh_reg_dt = "";				///////////////////////////////////////////////////		String msg = "";		if(mode.equals("add")){			msg = "등록";			bSuccess = DataInsert(sh_title, sh_content, sh_reg_writer, filenames,out);		}else if(mode.equals("edit")){// 			out.println("sh_seq_no : " + sh_seq_no + "<br>");			msg = "수정";			///////////////////////////////////////////////////			//기존 첨부 파일 삭제			String new_file_no = "";			String TableName = " sh_board_file3 ";			String SelectCondition = " file_no, sh_no, file_name, file_size, file_count ";			String WhereCondition = "";			String OrderCondition = " ORDER BY file_no ";						for (int j = 0; j < filenames.size(); j++) {				DataFileInfo tempBoard = (DataFileInfo)filenames.elementAt(j);				if(tempBoard.getFile_no() != null && !tempBoard.getFile_no().equals("")) {						WhereCondition = " where sh_no =  " + Integer.parseInt(sh_seq_no) + " and file_no = " + tempBoard.getFile_no();					Vector ResultVector = FrontBoard.list(TableName, SelectCondition, WhereCondition, OrderCondition, 1, 0, 0);					if( ResultVector.size() > 0){						for (int i=0; i < ResultVector.size();i++){							Hashtable h = (Hashtable)ResultVector.elementAt(i);							String file_name = (String)h.get("FILE_NAME");							String fileUrl = savePath + "\\" + file_name;// 							out.println("fileUrl : " + fileUrl + "<br>");							new File(fileUrl).delete();						}					}				}			}				///////////////////////////////////////////////////			bSuccess = DataModify(sh_seq_no, sh_title, sh_content ,sh_reg_writer ,filenames,out);		}else if(mode.equals("del")){			msg = "삭제";						///////////////////////////////////////////////////			String TableName = " sh_board_file3 ";		   	String SelectCondition = " file_no, sh_no, file_name, file_size, file_count ";			String WhereCondition  = " where sh_no =  " + Integer.parseInt(sh_seq_no);			String OrderCondition  = " ORDER BY file_no ";			Vector ResultVector = FrontBoard.list(TableName, SelectCondition, WhereCondition, OrderCondition, 1, 0, 0);// 			out.println("query end <br>");			if( ResultVector.size() > 0){				for (int i=0; i < ResultVector.size();i++){					Hashtable h = (Hashtable)ResultVector.elementAt(i);										String file_name = (String)h.get("FILE_NAME");										String fileUrl = savePath + "\\" + file_name;					new File(fileUrl).delete();				}			}									///////////////////////////////////////////////////			bSuccess = DataDel(sh_seq_no, out) ;		}	%><% 		if(bSuccess == true) { %>	        <script language="javascript">	        <!--	        	document.location.href = "commodity.jsp";			out.println("KEY "+ KEY + " <br>");	        	alert("<%=msg%>" +  " 되었습니다.");							self.location = "commodity.jsp?PAGE=<%=PAGE%>&FIELD=<%=FIELD%>&KEY=<%=KEY%>";	        //-->	        </script><%		}else{ %>	        <script language="javascript">	        <!--				alert("<%=msg%>" + "되지 않았습니다. \n\n 관리자에게 문의바랍니다.");				history.go(-1);					        //-->	        </script><%		} %>		<%	} catch(Exception e) {		out.println("commodity_write_proc.jsp : " + e.getMessage());	} finally {	}%>